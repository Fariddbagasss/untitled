package Master;

import connection.DBConnect;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.*;
import java.sql.SQLException;
import java.util.ArrayList;

public class MataPembelajaran extends JFrame{
    private JTextField txtidmpl;
    private JButton tambahButton;
    private JButton deleteButton;
    private JButton lihatButton;
    private JButton ubahButton;
    private JTable tblMapel;
    private JComboBox cbidpng;
    private JTextField txtnama;
    private JTextField txtjenjang;
    private JTextField txtkelas;
    private JTextField txtstatus;
    private JPanel kelolaMapel;
    private JComboBox cbjenjang;
    private JComboBox cbkelas;

    private DefaultTableModel model;
    DBConnect connect = new DBConnect();
    String idmapel, nama, idpng,jenjang,kelas;
    int status;

    public MataPembelajaran(){

        this.setSize(500,550);
        this.setContentPane(kelolaMapel);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.setTitle("Kelola Mata Pelajaran");
        this.setLocationRelativeTo(null);
        model = new DefaultTableModel();
        tblMapel.setModel(model);
        addColumn();
        loadData();
        txtidmpl.setText(getAutoGeneratedID());
        txtstatus.setText("Aktif");
        txtstatus.setEditable(false);
        cbidpng.setEditable(false);
        cbkelas.setEditable(false);
        cbjenjang.setEditable(false);
        tampilPengajar();
        clear();
        tambahButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    status= txtstatus.getText().equalsIgnoreCase("Aktif") ? 1:0;

                }catch (NumberFormatException ex){
                    JOptionPane.showMessageDialog(null, "Status harus angka");
                    return;
                }
                if (cbidpng.getSelectedItem() == null || txtnama.getText().isEmpty() || cbjenjang.getSelectedItem() == null || cbkelas.getSelectedItem() == null) {
                    JOptionPane.showMessageDialog(null, "Data Tidak boleh ada yang kosong");
                } else {
                    idmapel = txtidmpl.getText();
                    String namapng = cbidpng.getSelectedItem().toString();
                    nama = txtnama.getText();
                    jenjang = cbjenjang.getSelectedItem().toString();
                    kelas = cbkelas.getSelectedItem().toString();
                    status = 1;

                    //int i = 0;
                    try {
                        connect.stat = connect.conn.createStatement();
                        String sql = "SELECT id_png FROM tblPengajar where nama_png = '"+namapng+"'";
                        connect.result = connect.stat.executeQuery(sql);

                        while (connect.result.next()){
                            idpng = connect.result.getString("id_png");
                        }

                        String query = "INSERT INTO tblMapel VALUES (?, ?, ?, ?, ?, ?)";
                        connect.pstat = connect.conn.prepareStatement(query);
                        connect.pstat.setString(1, idmapel);
                        connect.pstat.setString(2, namapng);
                        connect.pstat.setString(3, nama);
                        connect.pstat.setString(4, jenjang);
                        connect.pstat.setString(5, kelas);
                        connect.pstat.setInt(6, status);

                        connect.pstat.executeUpdate();
                        connect.stat.close();
                        connect.result.close();
                        connect.pstat.close();
                        JOptionPane.showMessageDialog(null, "Data Mata Pelajaran Berhasil ditambahkan!!");
                    } catch (SQLException ex) {
                        System.out.println("Error saat menambahkan Data Mata Pelajaran: " + ex);
                    }
                    loadData();
                    clear();
                    tampilPengajar();
                }
            }
        });
        tblMapel.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                int i = tblMapel.getSelectedRow();
                if (i == -1) {
                    return;
                }
                txtidmpl.setText((String) model.getValueAt(i, 0));
                cbidpng.setSelectedItem((String) model.getValueAt(i,1));
                txtnama.setText((String) model.getValueAt(i, 2));
                cbjenjang.setSelectedItem((String) model.getValueAt(i,3));
                cbkelas.setSelectedItem((String) model.getValueAt(i,4));
                String stringStat = (String) model.getValueAt(i, 5);

                if (stringStat.equals("1")) {
                    txtstatus.setText("Aktif");
                } else if (stringStat.equals("0")) {
                    txtstatus.setText("Tidak Aktif");
                }
            }
        });
        ubahButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                idmapel =txtidmpl.getText();
                nama = txtnama.getText();
                try {
                   String query = "UPDATE tblMapel SET nama_mpl =? WHERE id_mpl=?";
                   // DBConnect connect = new DBConnect();
                    connect.pstat = connect.conn.prepareStatement(query);
                    connect.pstat.setString(1, nama);
                    connect.pstat.setString(2, idmapel);
                    connect.pstat.executeUpdate();
                    connect.pstat.close();
                } catch (Exception ex) {
                    System.out.println("Error saat mengubah Data Mata Pelajaran" + ex);
                }
                JOptionPane.showMessageDialog(null, "Data Mata Pelajaran berhasil diubah!");
              loadData();
            }
        });
        deleteButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                idmapel = txtidmpl.getText();
                try {
                    String query = "UPDATE tblMapel SET status_mpl = 0 WHERE id_mpl=?";
                    connect.pstat = connect.conn.prepareStatement(query);
                    connect.pstat.setString(1, idmapel);
                    connect.pstat.executeUpdate();
                    connect.pstat.close();
                    JOptionPane.showMessageDialog(null, "Delete Data Mata Pelajaran Berhasil!");
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "Delete Data Mata Pelajaran Gagal!"+ex.getMessage());
//                    String errorMessage = ex.getMessage();
//                    System.out.println("Error Message: " + errorMessage);
                    System.out.println("Terjadi Error saat Delete Data Mata Pelajaran: " + ex);
                }
                loadData();
            }
        });
        cbjenjang.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (cbjenjang.getSelectedIndex()==-1){
                    cbkelas.removeAllItems();
                }else if (cbjenjang.getSelectedItem().equals("SMP")){
                    cbkelas.removeAllItems();
                    cbkelas.addItem("7");
                    cbkelas.addItem("8");
                    cbkelas.addItem("9");
                }else if (cbjenjang.getSelectedItem().equals("SMA")){
                    cbkelas.removeAllItems();
                    cbkelas.addItem("10");
                    cbkelas.addItem("11");
                    cbkelas.addItem("12");
                }
            }
        });
    }
    public String getAutoGeneratedID() {
        String id = "";
        try {
            connect.stat = connect.conn.createStatement();
            String query = "SELECT MAX(SUBSTRING(id_mpl, 6, LEN(id_mpl))) AS ID FROM tblMapel";
            connect.result = connect.stat.executeQuery(query);

            if (connect.result.next()) {
                String lastID = connect.result.getString("ID");
                if(lastID != null){
                    int incrementedID = Integer.parseInt(lastID) + 1;
                    id = "MPL" + String.format("%03d", incrementedID);
                }else {
                    id= "MPL001";
                }
            }
            connect.stat.close();
            connect.result.close();
        } catch (SQLException e) {
            System.out.println("Terjadi kesalahan: " + e.getMessage());
        }
        return id;
    }

    public void addColumn() {
        model.addColumn("Id Mapel");
        model.addColumn("Id Pengajar");
        model.addColumn("Nama");
        model.addColumn("Jenjang");
        model.addColumn("Kelas");
        model.addColumn("status");
    }

    public void clear() {
        txtidmpl.setText(getAutoGeneratedID());
        cbidpng.setSelectedIndex(-1);
        txtnama.setText("");
        cbjenjang.setSelectedIndex(-1);
        //cbkelas.setSelectedIndex(-1);
        txtstatus.setText("Aktif");
    }

    public void loadData() {
        // model.setColumnCount(0);
        model.getDataVector().removeAllElements();
        model.fireTableDataChanged();

        try {
           // ArrayList<String> id = new ArrayList<>();
            DBConnect connect = new DBConnect();
            connect.stat = connect.conn.createStatement();
            String query = "SELECT * FROM tblMapel";
            connect.result = connect.stat.executeQuery(query);

            while (connect.result.next()) {
                Object[] obj = new Object[6];
                obj[0] = connect.result.getString("id_mpl");
               // String pengajar = connect.result.getString("id_png");
                //id.add(pengajar);
                obj[1] = connect.result.getString("id_png");
                obj[2] = connect.result.getString("nama_mpl");
                obj[3] = connect.result.getString("jenjang");
                obj[4] = connect.result.getString("kelas");
                obj[5] = connect.result.getString("status_mpl");
                model.addRow(obj);
            }
            /*for (int i = 0;i < model.getRowCount();i++){
                String sql = "SELECT nama_png FROM tblPengajar where id_png = '"+id.get(i)+"'";
                connect.result = connect.stat.executeQuery(sql);

                if (connect.result.next()){
                    int rowIndex = i; // Indeks baris
                    int columnIndex = 1; // Indeks kolom
                    Object value = connect.result.getString("nama_png");
                    model.setValueAt(value, rowIndex, columnIndex);
                }
            }*/
            connect.stat.close();
            connect.result.close();
        } catch (SQLException ex) {
            System.out.println("Terjadi kesalahan saat melihat Data Mata Pelajaran : " + ex);
        }
    }

    public void tampilPengajar(){
        try {
            connect.stat = connect.conn.createStatement();
            String sql = "SELECT id_png, nama_png, status FROM tblPengajar where status = 1";
            connect.result = connect.stat.executeQuery(sql);

            while (connect.result.next()){

              //  cbidpng.addItem(connect.result.getString("nama_png"));
                cbidpng.addItem(connect.result.getString("id_png"));
            }
            connect.stat.close();
            connect.result.close();
        }catch (SQLException ex){
            System.out.println("Terjadi error saat load data mata pelajaran"+ex);
        }
    }

    public static void main(String[] args) {
        JFrame tcGUI = new MataPembelajaran();
        tcGUI.setVisible(true);
    }
}
